//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import Alamofire
import Moya

struct AuthenticationTargets {

    /**
    Sign in with Facebook Token
    - returns: AccessToken
    - JSON: ["description": "registration successful", "name": "success200", "schema": ["enumName": "UNKNOWN", "name": "UNKNOWN", "value": "", "isDictionary": false, "isGlobal": false, "type": "AccessToken", "optionalValue": "", "raw": ["$ref": "#/definitions/AccessToken"], "optionalType": "AccessToken?", "optional": true, "isArray": false, "required": false, "encodedValue": "UNKNOWN?.encode()"], "statusCode": 200, "type": "AccessToken", "success": true]
    */


    struct FacebookSignInTarget: APITargetType {
        let method: Moya.Method = .post
        let authentication: Authentication = .none
        let path: String = "/signin/facebook"

        let facebookToken: String

        var parameters: Parameters? {
            var compositeParameters: CompositeParameters = CompositeParameters()

            var formParams: Parameters = [:]
            formParams["facebook_token"] = facebookToken
            compositeParameters.form = formParams

            return compositeParameters.toParameters()
        }
    }

    /**
    Sign up new user.
    - returns: AccessToken
    - JSON: ["description": "registration successful", "name": "success201", "schema": ["enumName": "UNKNOWN", "name": "UNKNOWN", "value": "", "isDictionary": false, "isGlobal": false, "type": "AccessToken", "optionalValue": "", "raw": ["$ref": "#/definitions/AccessToken"], "optionalType": "AccessToken?", "optional": true, "isArray": false, "required": false, "encodedValue": "UNKNOWN?.encode()"], "statusCode": 201, "type": "AccessToken", "success": true]
    */



    struct UserSignUpTarget: APITargetType {
        let method: Moya.Method = .post
        let authentication: Authentication = .none

        let path: String = "/signup"

        let email: String
        let password: String
        let name: String
        let gender: String
        let phoneNumber: String?

        var parameters: Parameters? {
            var compositeParameters: CompositeParameters = CompositeParameters()

            var formParams: Parameters = [:]
            formParams["email"] = email
            formParams["password"] = password
            formParams["name"] = name
            formParams["gender"] = gender
            formParams["phone_number"] = phoneNumber
            compositeParameters.form = formParams

            return compositeParameters.toParameters()
        }
    }

    /**
    Sign out.
    - returns: Status
    - JSON: ["description": "sign out successful", "name": "success200", "schema": ["enumName": "UNKNOWN", "name": "UNKNOWN", "value": "", "isDictionary": false, "isGlobal": false, "type": "Status", "optionalValue": "", "raw": ["$ref": "#/definitions/Status"], "optionalType": "Status?", "optional": true, "isArray": false, "required": false, "encodedValue": "UNKNOWN?.encode()"], "statusCode": 200, "type": "Status", "success": true]
    */



    struct UserSignOutTarget: APITargetType {
        let method: Moya.Method = .post

        let path: String = "/signout"

    }

    /**
    Sign in with oauth2 Resource Owner Password Credentials. ( Resource Owner Password Credentials Grant )
    - returns: AccessToken
    - JSON: ["description": "registration successful", "name": "success200", "schema": ["enumName": "UNKNOWN", "name": "UNKNOWN", "value": "", "isDictionary": false, "isGlobal": false, "type": "AccessToken", "optionalValue": "", "raw": ["$ref": "#/definitions/AccessToken"], "optionalType": "AccessToken?", "optional": true, "isArray": false, "required": false, "encodedValue": "UNKNOWN?.encode()"], "statusCode": 200, "type": "AccessToken", "success": true]
    */

    struct UserSignInTarget: APITargetType {
        let method: Moya.Method = .post
        let authentication: Authentication = .none

        let path: String = "/signin"

        let email: String
        let password: String

        var parameters: Parameters? {
            var compositeParameters: CompositeParameters = CompositeParameters()

            var formParams: Parameters = [:]
            formParams["email"] = email
            formParams["password"] = password
            formParams["client_id"] = APIConstPath.ClientId
            formParams["client_secret"] =  APIConstPath.ClientSecret

            compositeParameters.form = formParams

            return compositeParameters.toParameters()
        }
    }

    /**
    Sign out.
    - returns: AccessToken
    - JSON: ["description": "refresh successful", "name": "success200", "schema": ["enumName": "UNKNOWN", "name": "UNKNOWN", "value": "", "isDictionary": false, "isGlobal": false, "type": "AccessToken", "optionalValue": "", "raw": ["$ref": "#/definitions/AccessToken"], "optionalType": "AccessToken?", "optional": true, "isArray": false, "required": false, "encodedValue": "UNKNOWN?.encode()"], "statusCode": 200, "type": "AccessToken", "success": true]
    */


    struct RefreshTokenTarget: APITargetType {
        let method: Moya.Method = .post
        let authentication: Authentication = .none

        let path: String = "/token/refresh"

        let refreshToken: String

        var parameters: Parameters? {
            var compositeParameters: CompositeParameters = CompositeParameters()

            var formParams: Parameters = [:]
            formParams["refresh_token"] = refreshToken
            compositeParameters.form = formParams

            return compositeParameters.toParameters()
        }
    }
}
